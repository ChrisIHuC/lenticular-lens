{
  "EXACT": {
    "match": "{source} = {target}",
    "index": "btree ({target})"
  },
  "INTERMEDIATE": {
    "match": "{source_intermediate} = {target_intermediate}",
    "index": "btree ({target_intermediate})"
  },
  "NUMBERS_DELTA": {
    "match": "delta({type}, to_numeric_immutable({source}), to_numeric_immutable({target}), {distance_start}, {distance_end})",
    "index": "btree (to_numeric_immutable({target}))"
  },
  "TIME_DELTA": {
    "match": "delta({type}, to_date_immutable({source}, {format}), to_date_immutable({target}, {format}), {days} + ({months} * 30) + ({years} * 365))",
    "index": "btree (to_date_immutable({target}, {format}))"
  },
  "SAME_YEAR_MONTH": {
    "field": "get_date_part({date_part}, {field})",
    "index": "btree (get_date_part({date_part}, {target}))"
  },
  "LEVENSHTEIN_DISTANCE": {
    "match": "levenshtein_distance({source}, {target}, {max_distance})",
    "similarity": "similarity({source}, {target}, {match})",
    "condition": "{similarity} <= {max_distance}"
  },
  "LEVENSHTEIN_NORMALIZED": {
    "similarity": "similarity({source}, {target}, levenshtein_distance({source}, {target}, -1))",
    "condition": "{similarity} >= {threshold}"
  },
  "JARO": {
    "similarity": "jaro({source}, {target})",
    "condition": "{similarity} >= {threshold}"
  },
  "JARO_WINKLER": {
    "similarity": "jaro_winkler({source}, {target}, {prefix_weight})",
    "condition": "{similarity} >= {threshold}"
  },
  "WORD_INTERSECTION": {
    "similarity": "word_intersection({source}, {target}, {ordered}, {approximate}, {stop_symbols})",
    "condition": "{similarity} >= {threshold}"
  },
  "TRIGRAM": {
    "match": "{source} % {target}",
    "similarity": "similarity({source}, {target})",
    "before_index": "SELECT set_config('pg_trgm.similarity_threshold', {threshold}, true);",
    "index": "gin ({target} gin_trgm_ops)"
  },
  "SOUNDEX": {
    "field": "ll_soundex({field}, {size})",
    "index": "btree (ll_soundex({target}, {size}))"
  },
  "BLOOTHOOFT": {
    "field": "bloothooft({field}, {name_type})",
    "index": "btree (bloothooft({target}, {name_type}))"
  },
  "NYSIIS": {
    "field": "nysiis({field})",
    "index": "btree (nysiis({target}))"
  },
  "METAPHONE": {
    "field": "metaphone({field}, {max})",
    "index": "btree (metaphone({target}, {max}))"
  },
  "DMETAPHONE": {
    "field": "dmetaphone({field})",
    "index": "btree (dmetaphone({target}))"
  }
}