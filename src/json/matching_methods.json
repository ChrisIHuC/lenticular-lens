{
  "exact": {
    "label": "Exact match",
    "description": "Aligns source and target’s IRIs whenever their respective user selected property values are identical.",
    "see_also": [
      "https://lenticularlens.org/matching-method/exact"
    ],
    "threshold_range": "{0, 1}",
    "match": "{source} = {target}",
    "accepts_similarity_method": false,
    "is_similarity_method": false,
    "items": {}
  },
  "intermediate": {
    "label": "Intermediate dataset",
    "description": "The method aligns the source and the target’s IRIs via an intermediate database by using properties that potentially present different descriptions of the same entity, such as country name and country code. This is possible by providing an intermediate dataset that binds the two alternative descriptions to the very same identifier.",
    "see_also": [
      "https://lenticularlens.org/matching-method/intermediate"
    ],
    "threshold_range": "{0, 1}",
    "match": "{source_intermediate} = {target_intermediate}",
    "accepts_similarity_method": false,
    "is_similarity_method": false,
    "items": {
      "entity_type_selection": {
        "label": "Intermediate dataset",
        "type": "entity_type_selection"
      },
      "intermediate_source": {
        "label": "Source",
        "type": "property",
        "default_value": [
          [
            ""
          ]
        ],
        "entity_type_selection_key": "entity_type_selection"
      },
      "intermediate_target": {
        "label": "Target",
        "type": "property",
        "default_value": [
          [
            ""
          ]
        ],
        "entity_type_selection_key": "entity_type_selection"
      }
    }
  },
  "levenshtein_distance": {
    "label": "Levenshtein distance",
    "description": "This method is used to align source and target’s IRIs whenever the distance of their respective user selected property values are above a given Levenshtein edit distance threshold. Edit distance is a way of quantifying how dissimilar two strings (e.g., words) are to one another by counting the minimum number of operations ε (removal, insertion, or substitution of a character in the string) required to transform one string into the other.",
    "see_also": [
      "https://lenticularlens.org/matching-method/levenshtein",
      "https://en.wikipedia.org/wiki/Edit_distance"
    ],
    "threshold_range": "ℕ",
    "match": "levenshtein({source}, {target}, {max_distance})",
    "similarity": "similarity({source}, {target}, levenshtein({source}, {target}, {max_distance}))",
    "condition": "{match} <= {max_distance}",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "max_distance": {
        "label": "Maximum distance",
        "type": "number",
        "default_value": 1,
        "step": 1,
        "min_excl_value": 0,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/maxDistance",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "levenshtein_normalized": {
    "label": "Levenshtein normalized",
    "description": "This method is used to align source and target’s IRIs whenever the similarity score of their respective user selected property values are above a given Levenshtein threshold. Edit distance is a way of quantifying how dissimilar two strings (e.g., words) are to one another by counting the minimum number of operations ε (removal, insertion, or substitution of a character in the string) required to transform one string into the other.",
    "see_also": [
      "https://lenticularlens.org/matching-method/levenshtein",
      "https://en.wikipedia.org/wiki/Edit_distance"
    ],
    "threshold_range": "]0, 1]",
    "similarity": "similarity({source}, {target}, levenshtein({source}, {target}, -1))",
    "condition": "{similarity} >= {threshold}",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "threshold": {
        "label": "Similarity threshold",
        "type": "range",
        "default_value": 0.7,
        "step": 0.05,
        "min_excl_value": 0,
        "max_excl_value": 1,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/similarityThreshold",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "soundex": {
    "label": "Soundex",
    "description": "Soundex is a phonetic algorithm for indexing names by sound, as pronounced in English. The goal is for homophones to be encoded to the same representation so that they can be matched despite minor differences in spelling. The algorithm mainly encodes consonants; a vowel will not be encoded unless it is the first letter.",
    "see_also": [
      "https://lenticularlens.org/matching-method/soundex",
      "https://en.wikipedia.org/wiki/Soundex"
    ],
    "threshold_range": "{0, 1}",
    "field": "soundex({property}, {size})",
    "accepts_similarity_method": true,
    "is_similarity_method": false,
    "items": {
      "size": {
        "label": "Soundex size",
        "type": "range",
        "default_value": 4,
        "step": 1,
        "min_value": 1,
        "max_value": 5,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/soundexSize",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "bloothooft": {
    "label": "Gerrit Bloothooft",
    "description": "Gerrit Bloothooft description",
    "see_also": [
      "https://lenticularlens.org/matching-method/bloothooft"
    ],
    "threshold_range": "{0, 1}",
    "field": "bloothooft({property}, {name_type})",
    "accepts_similarity_method": true,
    "is_similarity_method": false,
    "items": {
      "name_type": {
        "label": "Type of name",
        "type": "choices",
        "choices": {
          "first_name": "First name",
          "family_name": "Family name"
        },
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/BloothooftNameType",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "word_intersection": {
    "label": "Word Intersection",
    "description": "The word intersection approximation method is originally designed to find a subset of words within a larger text. However, it could also be used for any pair of strings regardless of the strings sizes.",
    "see_also": [
      "https://lenticularlens.org/matching-method/word-intersection"
    ],
    "threshold_range": "]0, 1]",
    "similarity": "word_intersection({source}, {target}, {ordered}, {approximate}, {stop_symbols})",
    "condition": "{similarity} >= {threshold}",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "ordered": {
        "label": "Keep the order of the words",
        "type": "boolean",
        "default_value": false
      },
      "approximate": {
        "label": "Each word should be approximated",
        "type": "boolean",
        "default_value": true
      },
      "stop_symbols": {
        "label": "Stop symbols",
        "type": "string",
        "default_value": ".-,+'?;()–"
      },
      "threshold": {
        "label": "Similarity threshold",
        "type": "range",
        "default_value": 0.7,
        "step": 0.05,
        "min_excl_value": 0,
        "max_excl_value": 1,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/similarityThreshold",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "metaphone": {
    "label": "Metaphone",
    "description": "Metaphone is a phonetic algorithm for a more accurate encoding of words by sound (as compared to Soundex) as pronounced in English. In this algorithm as with Soundex, similar-sounding words should share the same encoding key which is an approximate phonetic representation of the original word.",
    "see_also": [
      "https://lenticularlens.org/matching-method/metaphone",
      "https://en.wikipedia.org/wiki/Metaphone"
    ],
    "threshold_range": "{0, 1}",
    "field": "metaphone({property}, {max})",
    "accepts_similarity_method": true,
    "is_similarity_method": false,
    "items": {
      "max": {
        "label": "Maximum size",
        "type": "number",
        "default_value": 20,
        "step": 1,
        "min_value": 1,
        "max_value": 255
      }
    }
  },
  "dmetaphone": {
    "label": "Double Metaphone",
    "description": "Double metaphone is a third generation phonetic algorithm improvement after Soundex and Metaphone for an accurately encoding words by sound as pronounced in English. It is called \"Double\" because it can return both a primary and a secondary code for a string; this accounts for some ambiguous cases as well as for multiple variants of surnames with common ancestry.",
    "see_also": [
      "https://lenticularlens.org/matching-method/double-metaphone",
      "https://en.wikipedia.org/wiki/Metaphone"
    ],
    "threshold_range": "{0, 1}",
    "field": "dmetaphone({property})",
    "accepts_similarity_method": true,
    "is_similarity_method": false,
    "items": {}
  },
  "trigram": {
    "label": "Trigram",
    "description": "Trigrams are a special case of the n-gram, where n is 3. It is a contiguous sequence of three items from a given sample.",
    "see_also": [
      "https://lenticularlens.org/matching-method/trigram",
      "https://en.wikipedia.org/wiki/Trigram",
      "https://en.wikipedia.org/wiki/N-gram"
    ],
    "threshold_range": "]0, 1]",
    "match": "{source} % {target}",
    "similarity": "similarity({source}, {target})",
    "before_index": "SELECT set_config('pg_trgm.similarity_threshold', {threshold}, true);",
    "index": "gin ({target} gin_trgm_ops)",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "threshold": {
        "label": "Similarity threshold",
        "type": "range",
        "default_value": 0.7,
        "step": 0.05,
        "min_excl_value": 0,
        "max_excl_value": 1,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/similarityThreshold",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "numbers_delta": {
    "label": "Numbers Delta",
    "description": "The numbers delta is used to align the source and the target by approximating the match of the numeric values of the selected properties according to a delta.",
    "see_also": [
      "https://lenticularlens.org/matching-method/numbers"
    ],
    "threshold_range": "ℕ",
    "match": "delta({type}, {source}, {target}, {distance_start}, {distance_end})",
    "field_type": "number",
    "accepts_similarity_method": false,
    "is_similarity_method": false,
    "items": {
      "type": {
        "label": "Size difference",
        "type": "choices",
        "choices": {
          "<>": "Irrelevant",
          "<": "Source < Target",
          ">": "Source > Target"
        }
      },
      "start": {
        "label": "Start",
        "type": "number",
        "default_value": 0
      },
      "end": {
        "label": "End",
        "type": "number",
        "default_value": 0
      }
    }
  },
  "time_delta": {
    "label": "Time Delta",
    "description": "The time delta is used to align the source and the target by approximating the match of the date values of the selected properties according to a delta.",
    "see_also": [
      "https://lenticularlens.org/matching-method/time-delta"
    ],
    "threshold_range": "ℕ",
    "match": "delta({type}, {source}, {target}, {days} + ({months} * 30) + ({years} * 365))",
    "field_type": "date",
    "accepts_similarity_method": false,
    "is_similarity_method": false,
    "items": {
      "type": {
        "label": "Should occur before or after?",
        "type": "choices",
        "choices": {
          "<>": "Irrelevant",
          "<": "Source event before target event",
          ">": "Source event after target event"
        }
      },
      "years": {
        "label": "Years",
        "type": "number",
        "default_value": 0,
        "step": 1,
        "min_value": 0
      },
      "months": {
        "label": "Months",
        "type": "number",
        "default_value": 0,
        "step": 1,
        "min_value": 0
      },
      "days": {
        "label": "Days",
        "type": "number",
        "default_value": 0,
        "step": 1,
        "min_value": 0
      },
      "format": {
        "label": "Date format",
        "type": "string",
        "default_value": "YYYY-MM-DD"
      }
    }
  },
  "same_year_month": {
    "label": "Same Year/Month",
    "description": "Same Year/Month is used to align source and target’s IRIs whenever an exact match of the year or year and month is observed between source and target's input dates.",
    "see_also": [
      "https://lenticularlens.org/matching-method/same-year-month"
    ],
    "threshold_range": "{0, 1}",
    "field": "get_date_part({date_part}, {property})",
    "accepts_similarity_method": false,
    "is_similarity_method": false,
    "items": {
      "date_part": {
        "label": "Same Year/Month?",
        "type": "choices",
        "choices": {
          "year": "Year",
          "month": "Month",
          "year_month": "Year and Month"
        },
        "rdf": {
          "predicate": "http://www.w3.org/2006/time#unitType",
          "prefix": "time",
          "uri": "http://www.w3.org/2006/time#",
          "values": {
            "month": [
              {
                "predicate": "http://www.w3.org/2006/time#unitMonth",
                "prefix": "time",
                "uri": "http://www.w3.org/2006/time#"
              }
            ],
            "year": [
              {
                "predicate": "http://www.w3.org/2006/time#unitYear",
                "prefix": "time",
                "uri": "http://www.w3.org/2006/time#"
              }
            ],
            "year_month": [
              {
                "predicate": "http://www.w3.org/2006/time#unitYear",
                "prefix": "time",
                "uri": "http://www.w3.org/2006/time#"
              },
              {
                "predicate": "http://www.w3.org/2006/time#unitMonth",
                "prefix": "time",
                "uri": "http://www.w3.org/2006/time#"
              }
            ]
          }
        }
      }
    }
  },
  "jaro": {
    "label": "Jaro",
    "description": "Jaro distance is a measure of similarity between two strings. The higher the Jaro distance for two strings is, the more similar the strings are. The score is normalised such that 0 equates to no similarity and 1 is an exact match.",
    "see_also": [
      "https://lenticularlens.org/matching-method/jaro",
      "https://rosettacode.org/wiki/Jaro_distance"
    ],
    "threshold_range": "]0, 1]",
    "similarity": "jaro({source}, {target})",
    "condition": "{similarity} >= {threshold}",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "threshold": {
        "label": "Similarity threshold",
        "type": "range",
        "default_value": 0.7,
        "step": 0.05,
        "min_excl_value": 0,
        "max_excl_value": 1,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/similarityThreshold",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  },
  "jaro_winkler": {
    "label": "Jaro-Winkler",
    "description": "Jaro-Winkler boosts up the Jaro algorithm’s result by increasing it whenever the compared strings share a prefix of a maximum of four characters.",
    "see_also": [
      "https://lenticularlens.org/matching-method/jaro-winkler",
      "https://www.geeksforgeeks.org/jaro-and-jaro-winkler-similarity"
    ],
    "threshold_range": "]0, 1]",
    "similarity": "jaro_winkler({source}, {target}, {prefix_weight})",
    "condition": "{similarity} >= {threshold}",
    "accepts_similarity_method": false,
    "is_similarity_method": true,
    "items": {
      "threshold": {
        "label": "Similarity threshold",
        "type": "range",
        "default_value": 0.7,
        "step": 0.05,
        "min_excl_value": 0,
        "max_excl_value": 1,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/similarityThreshold",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      },
      "prefix_weight": {
        "label": "Prefix weight",
        "type": "range",
        "default_value": 0.1,
        "step": 0.05,
        "min_value": 0.1,
        "max_value": 0.25,
        "rdf": {
          "predicate": "https://lenticularlens.org/voidPlus/jaroWinklerPrefixWeight",
          "prefix": "voidPlus",
          "uri": "https://lenticularlens.org/voidPlus/"
        }
      }
    }
  }
}