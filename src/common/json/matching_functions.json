{
  "=": {
    "sql_template": "{source} = {target}",
    "similarity": 1,
    "index_using": "btree({target})"
  },
  ">": {
    "sql_template": "{source} > {target}",
    "similarity": "{source} - {target}",
    "index_using": "btree({target})"
  },
  "TRIGRAM_DISTANCE": {
    "sql_template": "{source} % {target}",
    "similarity": "similarity({source}, {target})",
    "before_index": "SELECT set_config('pg_trgm.similarity_threshold', '{threshold}', true);",
    "index_using": "gin({target} gin_trgm_ops)"
  },
  "DISTANCE_IS_BETWEEN": {
    "sql_template": "{source} IS NOT NULL AND {target} IS NOT NULL AND {source} - {target} BETWEEN {distance_start} AND {distance_end}",
    "similarity": "{source} - {target}"
  },
  "TIME_DELTA": {
    "sql_template": "{source} IS NOT NULL AND {target} IS NOT NULL AND {source} - {target} BETWEEN -({days} * {multiplier}) AND ({days} * {multiplier})",
    "similarity": "{source} - {target}",
    "transformers": ["to_date_immutable"]
  },
  "SAME_YEAR_MONTH": {
    "sql_template": "get_{date_part}({source}) = get_{date_part}({target})",
    "index_using": "btree(get_{date_part}({target}))"
  },
  "LEVENSHTEIN": {
    "sql_template": "levenshtein_edit_distance({source}, {target}) >= {min_distance}",
    "similarity": "levenshtein_edit_distance({source}, {target})"
  },
  "LL_SOUNDEX": {
    "sql_template": "ll_soundex({source}) = ll_soundex({target}) AND 1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target}))) >= {threshold}",
    "similarity": "1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target})))",
    "index_using": "btree(ll_soundex({target}))"
  },
  "BLOOTHOOFT_REDUCT": {
    "before_alignment": "SELECT bloothooft_bootstrap();",
    "sql_template": "bloothooft_reduct({source}, '{name_type}') = bloothooft_reduct({target}, '{name_type}') AND 1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target}))) >= {threshold}",
    "similarity": "1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target})))",
    "index_using": "btree(bloothooft_reduct({target}, '{name_type}'))"
  },
  "BLOOTHOOFT_REDUCT_APPROX": {
    "before_alignment": "SELECT bloothooft_bootstrap();",
    "sql_template": "1 - (levenshtein(bloothooft_reduct({source}, '{name_type}'), bloothooft_reduct({target}, '{name_type}'))::decimal / greatest(char_length(bloothooft_reduct({source}, '{name_type}')), char_length(bloothooft_reduct({target}, '{name_type}')))) >= {bloothooft_threshold} AND 1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target}))) >= {threshold}",
    "similarity": "1 - (levenshtein({source}, {target})::decimal / greatest(char_length({source}), char_length({target})))"
  }
}